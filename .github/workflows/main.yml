name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  front:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd front
          npm ci

      - name: Test front + coverage
        run: |
          cd front
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 libxss1 libasound2t64 libx11-xcb1 \
            libatk-bridge2.0-0 libgtk-3-0 libxcomposite1 \
            libxcursor1 libxdamage1 libxi6 libgbm1 \
            libpangocairo-1.0-0 libatspi2.0-0
          npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

  sonarqube:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [front]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build & test backend with coverage
        working-directory: back
        run: |
          mvn clean test

      - name: Debug JaCoCo XML
        run: |
          echo "== Checking JaCoCo XML report =="
          ls -R back/target/site/jacoco || echo "No JaCoCo directory"
          cat back/target/site/jacoco/jacoco.xml | head -10 || echo "jacoco.xml missing"

      - name: Debug LCOV report
        run: |
          echo "== Checking LCOV report =="
          ls -R front/coverage || echo "No front coverage directory"
          cat front/coverage/*/lcov.info | head -10 || echo "lcov.info missing"

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.sources=front/src,back/src/main
            -Dsonar.tests=back/src/test,front/src/app/**/*.spec.ts
            -Dsonar.exclusions=back/src/test/**
            -Dsonar.javascript.lcov.reportPaths=front/coverage/*/lcov.info
            -Dsonar.coverage.jacoco.xmlReportPaths=back/target/site/jacoco/jacoco.xml
            -Dsonar.java.binaries=back/target/classes
            -Dsonar.verbose=true

  docker:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: [sonarqube]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push front image
        uses: docker/build-push-action@v5
        with:
          context: front
          file: front/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/front-app:latest
            ${{ secrets.DOCKER_USERNAME }}/front-app:${{ github.sha }}

      - name: Build and push back image
        uses: docker/build-push-action@v5
        with:
          context: back
          file: back/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/back-app:latest
            ${{ secrets.DOCKER_USERNAME }}/back-app:${{ github.sha }}
